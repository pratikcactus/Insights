package com.cactus.insights.pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.cactus.executor.Executioner;
import com.cactus.inits.Config;
import com.cactus.utils.Util;
import com.relevantcodes.extentreports.ExtentTest;

public class RegisterPage {// extends AbstractPage
	private final WebDriver driver;
	private WebDriverWait wait;
	private Executioner executor;
	private ExtentTest test;
	private Util util;
	private LoginPage loginPage;

	// Register button
	@FindBy(xpath = "//div[@class='anonymous-register anonymous-text']")
	public WebElement registerButton;

	// Register form
	@FindBy(id = "formm-bg")
	public WebElement registrationForm;

	// First Name
	@FindBy(id = "txtfirstname")
	public WebElement firstName;

	// Last name
	@FindBy(id = "txtlastname")
	public WebElement lastName;

	// Email Address
	@FindBy(id = "txtemail")
	public WebElement emailAddressRegister;

	// Password
	@FindBy(id = "txtpwd")
	public WebElement passwordRegister;

	// Confirm Password
	@FindBy(id = "txtcnfpwd")
	public WebElement confirmPassword;

	// Univeristy Name
	@FindBy(id = "txtorg")
	public WebElement universityName;

	// Job Title Select Id
	@FindBy(id = "drpjdesc")
	public WebElement jobTitleId;

	// Captcha Text
	@FindBy(xpath = "//span[@class='captchaText']")
	public WebElement captchaText;

	// Register for free button
	@FindBy(id = "crsubmit")
	public WebElement registerFreeButton;

	// Register Page/ HomePage Conditions
	public RegisterPage(WebDriver driver, ExtentTest test, WebDriverWait wait) {
		// super(driver, wait);
		this.driver = driver;
		this.wait = wait;
		this.test = test;
		executor = new Executioner(driver, test, wait);
		util = Util.getInstance();
		loginPage = new LoginPage(driver, test, wait);

		PageFactory.initElements(driver, this);
		executor.softWaitforVisibilityOfWebElement(loginPage.bannerpopup, "Wait until banner is displayed");
		if (executor.isElementDisplayed(loginPage.bannerpopup, "banner pop-up") == true) {
			executor.click(loginPage.bannerpopup, "No Thanks button for banner pop-up clicked");
		} else {

			executor.softWaitforVisibilityOfWebElement(registerButton, "Wait until Registration button is displayed");

			if (!driver.getTitle().trim().toLowerCase().contains(Config.ROW_TEST_SITE.toLowerCase())) {
				throw new IllegalStateException("This is not  the  Staging  site Page");
			}
		}
	}
	
	public void goToRegistration(){
		executor.click(registerButton, "Registration Button is clicked");
	}

}
